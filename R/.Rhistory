library(leaflet) #for making the interactive map
library(shiny)
library(maps)
library(rlang)
library(usethis)
library(devtools)
library(testthat)
library(shinytest)
library(FindandRateBookstore)
library(shinyWidgets)
# UI
ui <- fluidPage(
setBackgroundColor(
color = "#d9f0c1",
gradient = c("linear", "radial"),
direction = c("bottom", "top", "right", "left"),
shinydashboard = FALSE
), #making the background colour green
titlePanel(
tags$div(
#tags$img(system.file("www", "6920933.png", package = "FindandRateBookstore"),
#        height = "150px", width = "150px"),
tags$span(style = "margin-left: 20px;"),
"Find a Bookstore"
) #adding a title
),
sidebarLayout(
position = "right",
sidebarPanel(
style = "background-color: #FFFFCC ;",
h1("Where are you right now?"),
textInput("latitude", "Latitude:"),
helpText("Enter the latitude of your location."),
textInput("longitude", "Longitude:"),
helpText("Enter the longitude of your location."),
actionButton("updateMap", "Update Map"),
br(),
h3("Zoom to Locations:"),
actionButton("button_anne_frank", "Anne Frank House"),
actionButton("button_van_gogh", "Van Gogh Museum"),
actionButton("button_rijksmuseum", "Rijksmuseum"),
actionButton("button_vondelpark", "Vondelpark"),
actionButton("button_dam_square", "Dam Square"),
actionButton("button_schiphol_airport", "Schiphol Airport"),
actionButton("button_centraal_station", "Centraal Station")
), #to add the buttons
mainPanel(
h1("Map"),
leafletOutput("map_netherlands"),
br(),
textOutput("map_description"),
br()
)#the app in the main part
)
)
# Server
server <- function(input, output) {
greenIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) #the icon used for the bookstores
redIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-red.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) # the icon used for your own location
output$map_netherlands <- renderLeaflet({
leaflet() %>%
addTiles() %>%
setView(lng = 5.2913, lat = 52.1326, zoom = 7)
}) # the map
markers_df <- read.csv("inst/www/bookstores1234.csv")
button_markers_df <- data.frame(
location = c("anne_frank", "van_gogh", "rijksmuseum", "vondelpark", "dam_square",
"schiphol_airport", "centraal_station"),  # Additional location names
lng = c(4.8839, 4.8812, 4.8852, 4.8684, 4.8922, 4.7634, 4.9000),  # Additional longitudes
lat = c(52.3752, 52.3584, 52.3600, 52.3580, 52.3731, 52.3091, 52.3792),  # Additional latitudes
name = c("Anne Frank House", "Van Gogh Museum", "Rijksmuseum", "Vondelpark", "Dam Square",
"Schiphol Airport", "Centraal Station")  # Additional names
) # the buttons for all the tourist information
observeEvent(input$updateMap, {
lat <- as.numeric(input$latitude)
lng <- as.numeric(input$longitude)
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
clearMarkers() %>%
addMarkers(lng = lng, lat = lat, label = "Your Location", icon = redIcon) %>%
setView(lng = lng, lat = lat, zoom = 15) %>%
addMarkers(
data = markers_df,
lng = ~lng, lat = ~lat,
label = paste("Name: ", markers_df$name,
"Rating: ", markers_df$rating,
"Address: ", markers_df$formatted_address),
icon = greenIcon
) # adding the markers
}
})
zoom_to_location <- function(location) {
lat <- button_markers_df$lat[button_markers_df$location == location]
lng <- button_markers_df$lng[button_markers_df$location == location]
zoom <- 17
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
setView(lng = lng, lat = lat, zoom = zoom)
}
}
observeEvent(input$button_anne_frank, {
zoom_to_location("anne_frank")
})
observeEvent(input$button_van_gogh, {
zoom_to_location("van_gogh")
})
observeEvent(input$button_rijksmuseum, {
zoom_to_location("rijksmuseum")
})
observeEvent(input$button_vondelpark, {
zoom_to_location("vondelpark")
})
observeEvent(input$button_dam_square, {
zoom_to_location("dam_square")
})
observeEvent(input$button_schiphol_airport, {
zoom_to_location("schiphol_airport")
})
observeEvent(input$button_centraal_station, {
zoom_to_location("centraal_station")
})
output$map_description <- renderText({
"Add your longitude and latitude to the right, and this map will show you your location."
})
}
startApp <- function(){
shinyApp(ui= ui, server= server) }
library(FindandRateBookstore)
startApp()
#install.packages("rmarkdown")
install.packages("FindandRateBookstore")
install.packages("FindandRateBookstore")
library(leaflet) #for making the interactive map
library(shiny)
library(maps)
library(rlang)
library(usethis)
library(devtools)
library(testthat)
library(shinytest)
library(FindandRateBookstore)
library(shinyWidgets)
# UI
ui <- fluidPage(
setBackgroundColor(
color = "#d9f0c1",
gradient = c("linear", "radial"),
direction = c("bottom", "top", "right", "left"),
shinydashboard = FALSE
), #making the background colour green
titlePanel(
tags$div(
#tags$img(system.file("www", "6920933.png", package = "FindandRateBookstore"),
#        height = "150px", width = "150px"),
tags$span(style = "margin-left: 20px;"),
"Find a Bookstore"
) #adding a title
),
sidebarLayout(
position = "right",
sidebarPanel(
style = "background-color: #FFFFCC ;",
h1("Where are you right now?"),
textInput("latitude", "Latitude:"),
helpText("Enter the latitude of your location."),
textInput("longitude", "Longitude:"),
helpText("Enter the longitude of your location."),
actionButton("updateMap", "Update Map"),
br(),
h3("Zoom to Locations:"),
actionButton("button_anne_frank", "Anne Frank House"),
actionButton("button_van_gogh", "Van Gogh Museum"),
actionButton("button_rijksmuseum", "Rijksmuseum"),
actionButton("button_vondelpark", "Vondelpark"),
actionButton("button_dam_square", "Dam Square"),
actionButton("button_schiphol_airport", "Schiphol Airport"),
actionButton("button_centraal_station", "Centraal Station")
), #to add the buttons
mainPanel(
h1("Map"),
leafletOutput("map_netherlands"),
br(),
textOutput("map_description"),
br()
)#the app in the main part
)
)
# Server
server <- function(input, output) {
greenIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) #the icon used for the bookstores
redIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-red.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) # the icon used for your own location
output$map_netherlands <- renderLeaflet({
leaflet() %>%
addTiles() %>%
setView(lng = 5.2913, lat = 52.1326, zoom = 7)
}) # the map
markers_df <- read.csv("inst/www/bookstores1234.csv")
button_markers_df <- data.frame(
location = c("anne_frank", "van_gogh", "rijksmuseum", "vondelpark", "dam_square",
"schiphol_airport", "centraal_station"),  # Additional location names
lng = c(4.8839, 4.8812, 4.8852, 4.8684, 4.8922, 4.7634, 4.9000),  # Additional longitudes
lat = c(52.3752, 52.3584, 52.3600, 52.3580, 52.3731, 52.3091, 52.3792),  # Additional latitudes
name = c("Anne Frank House", "Van Gogh Museum", "Rijksmuseum", "Vondelpark", "Dam Square",
"Schiphol Airport", "Centraal Station")  # Additional names
) # the buttons for all the tourist information
observeEvent(input$updateMap, {
lat <- as.numeric(input$latitude)
lng <- as.numeric(input$longitude)
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
clearMarkers() %>%
addMarkers(lng = lng, lat = lat, label = "Your Location", icon = redIcon) %>%
setView(lng = lng, lat = lat, zoom = 15) %>%
addMarkers(
data = markers_df,
lng = ~lng, lat = ~lat,
label = paste("Name: ", markers_df$name,
"Rating: ", markers_df$rating,
"Address: ", markers_df$formatted_address),
icon = greenIcon
) # adding the markers
}
})
zoom_to_location <- function(location) {
lat <- button_markers_df$lat[button_markers_df$location == location]
lng <- button_markers_df$lng[button_markers_df$location == location]
zoom <- 17
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
setView(lng = lng, lat = lat, zoom = zoom)
}
}
observeEvent(input$button_anne_frank, {
zoom_to_location("anne_frank")
})
observeEvent(input$button_van_gogh, {
zoom_to_location("van_gogh")
})
observeEvent(input$button_rijksmuseum, {
zoom_to_location("rijksmuseum")
})
observeEvent(input$button_vondelpark, {
zoom_to_location("vondelpark")
})
observeEvent(input$button_dam_square, {
zoom_to_location("dam_square")
})
observeEvent(input$button_schiphol_airport, {
zoom_to_location("schiphol_airport")
})
observeEvent(input$button_centraal_station, {
zoom_to_location("centraal_station")
})
output$map_description <- renderText({
"Add your longitude and latitude to the right, and this map will show you your location."
})
}
startApp <- function(){
shinyApp(ui= ui, server= server) }
startApp()
markers_df <- read.csv("inst/www/bookstores1234.csv")
library(leaflet) #for making the interactive map
library(shiny)
library(maps)
library(rlang)
library(usethis)
library(devtools)
library(testthat)
library(shinytest)
library(FindandRateBookstore)
library(shinyWidgets)
# UI
ui <- fluidPage(
setBackgroundColor(
color = "#d9f0c1",
gradient = c("linear", "radial"),
direction = c("bottom", "top", "right", "left"),
shinydashboard = FALSE
), #making the background colour green
titlePanel(
tags$div(
#tags$img(system.file("www", "6920933.png", package = "FindandRateBookstore"),
#        height = "150px", width = "150px"),
tags$span(style = "margin-left: 20px;"),
"Find a Bookstore"
) #adding a title
),
sidebarLayout(
position = "right",
sidebarPanel(
style = "background-color: #FFFFCC ;",
h1("Where are you right now?"),
textInput("latitude", "Latitude:"),
helpText("Enter the latitude of your location."),
textInput("longitude", "Longitude:"),
helpText("Enter the longitude of your location."),
actionButton("updateMap", "Update Map"),
br(),
h3("Zoom to Locations:"),
actionButton("button_anne_frank", "Anne Frank House"),
actionButton("button_van_gogh", "Van Gogh Museum"),
actionButton("button_rijksmuseum", "Rijksmuseum"),
actionButton("button_vondelpark", "Vondelpark"),
actionButton("button_dam_square", "Dam Square"),
actionButton("button_schiphol_airport", "Schiphol Airport"),
actionButton("button_centraal_station", "Centraal Station")
), #to add the buttons
mainPanel(
h1("Map"),
leafletOutput("map_netherlands"),
br(),
textOutput("map_description"),
br()
)#the app in the main part
)
)
# Server
server <- function(input, output) {
greenIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-green.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) #the icon used for the bookstores
redIcon <- makeIcon(
iconUrl = "https://leafletjs.com/examples/custom-icons/leaf-red.png",
iconWidth = 38, iconHeight = 95,
iconAnchorX = 22, iconAnchorY = 94,
shadowUrl = "https://leafletjs.com/examples/custom-icons/leaf-shadow.png",
shadowWidth = 50, shadowHeight = 64,
shadowAnchorX = 4, shadowAnchorY = 62
) # the icon used for your own location
output$map_netherlands <- renderLeaflet({
leaflet() %>%
addTiles() %>%
setView(lng = 5.2913, lat = 52.1326, zoom = 7)
}) # the map
markers_df <- read.csv("inst/www/bookstores1234.csv")
button_markers_df <- data.frame(
location = c("anne_frank", "van_gogh", "rijksmuseum", "vondelpark", "dam_square",
"schiphol_airport", "centraal_station"),  # Additional location names
lng = c(4.8839, 4.8812, 4.8852, 4.8684, 4.8922, 4.7634, 4.9000),  # Additional longitudes
lat = c(52.3752, 52.3584, 52.3600, 52.3580, 52.3731, 52.3091, 52.3792),  # Additional latitudes
name = c("Anne Frank House", "Van Gogh Museum", "Rijksmuseum", "Vondelpark", "Dam Square",
"Schiphol Airport", "Centraal Station")  # Additional names
) # the buttons for all the tourist information
observeEvent(input$updateMap, {
lat <- as.numeric(input$latitude)
lng <- as.numeric(input$longitude)
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
clearMarkers() %>%
addMarkers(lng = lng, lat = lat, label = "Your Location", icon = redIcon) %>%
setView(lng = lng, lat = lat, zoom = 15) %>%
addMarkers(
data = markers_df,
lng = ~lng, lat = ~lat,
label = paste("Name: ", markers_df$name,
"Rating: ", markers_df$rating,
"Address: ", markers_df$formatted_address),
icon = greenIcon
) # adding the markers
}
})
zoom_to_location <- function(location) {
lat <- button_markers_df$lat[button_markers_df$location == location]
lng <- button_markers_df$lng[button_markers_df$location == location]
zoom <- 17
if (!is.na(lat) && !is.na(lng)) {
leafletProxy("map_netherlands") %>%
setView(lng = lng, lat = lat, zoom = zoom)
}
}
observeEvent(input$button_anne_frank, {
zoom_to_location("anne_frank")
})
observeEvent(input$button_van_gogh, {
zoom_to_location("van_gogh")
})
observeEvent(input$button_rijksmuseum, {
zoom_to_location("rijksmuseum")
})
observeEvent(input$button_vondelpark, {
zoom_to_location("vondelpark")
})
observeEvent(input$button_dam_square, {
zoom_to_location("dam_square")
})
observeEvent(input$button_schiphol_airport, {
zoom_to_location("schiphol_airport")
})
observeEvent(input$button_centraal_station, {
zoom_to_location("centraal_station")
})
output$map_description <- renderText({
"Add your longitude and latitude to the right, and this map will show you your location."
})
}
startApp <- function(){
shinyApp(ui= ui, server= server) }
startApp()
